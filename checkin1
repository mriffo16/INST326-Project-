import tkinter as tk
import random
import time


class JeopardyGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Jeopardy")
        self.categories = ["Python", "Movies", "TV Shows", "Music"]
        self.questions = {
            "Python": {
                100: "What is a dictionary in Python?",
                200: "What is a tuple in Python?",
                300: "What is a list in Python?"
            },
            "Movies": {
                100: "If you watch the Marvel movies in chronological order, which movie would you start with?",
                200: "What was the first feature-length animated movie ever released?",
                300: "What is the first animated movie made entirely by CGI (computer-generated imagery)?"
            },
            "TV Shows": {
                100: "What is the highest-rated television show on IMDB?",
                200: "Spongebob Squarepants was originally going to be named what?",
                300: "What is the longest-running game show of all time?"
            },
            "Music": {
                100: "Who performed at the Super Bowl halftime show in 2021?",
                200: "What country is Rihanna from?",
                300: "Before becoming a solo artist, Beyoncé was part of Destiny’s Child group. Name the two other members."
            }
        }
        self.score = {player: 0 for player in range(1, 3)}  # Scores for two players
        self.current_player = random.choice([1, 2])  # Randomly select the first player
        self.correct_answers = {
            "Python": {
                100: "Data structure",
                200: "Immutable",
                300: "Mutable"
            },
            "Movies": {
                100: "Captain America: The First Avenger",
                200: "Snow White and the Seven Dwarfs",
                300: "Toy Story"
            },
            "TV Shows": {
                100: "Breaking Bad",
                200: "El Apóstol",
                300: "The Price Is Right"
            },
            "Music": {
                100: "The Weeknd",
                200: "Barbados",
                300: "Kelly Rowland and Michelle Williams"
            }
        }
        self.setup_ui()

    def setup_ui(self):
        for i, category in enumerate(self.categories):
            tk.Label(self.root, text=category).grid(row=0, column=i, padx=10, pady=10)
            for j, amount in enumerate([100, 200, 300]):
                button = tk.Button(self.root, text="$" + str(amount), command=lambda c=category, a=amount: self.show_question(c, a))
                button.grid(row=j + 1, column=i, padx=10, pady=10)

        self.score_labels = []
        for player in range(1, 3):
            label = tk.Label(self.root, text="Player {} Score: {}".format(player, self.score[player]))
            label.grid(row=len(self.questions) + 2 + player, columnspan=len(self.categories), padx=10, pady=5)
            self.score_labels.append(label)

        # Start the game
        self.play_game()

    def play_game(self):
        for category in self.categories:
            for amount in [100, 200, 300]:
                self.show_question(category, amount)
                self.root.update()  # Update the display
                time.sleep(50)  # Delay between questions
                self.check_answer(category, amount)

    def show_question(self, category, amount):
        self.current_category = category
        self.current_amount = amount
        question = self.questions[category][amount]
        question_window = tk.Toplevel(self.root)
        tk.Label(question_window, text=question).pack()
        self.answer_entry = tk.Entry(question_window)
        self.answer_entry.pack()

    def check_answer(self, category, amount):
        user_answer = self.get_ai_answer() if self.current_player == 2 else self.answer_entry.get().strip()
        correct_answer = self.correct_answers[category][amount].strip()
        if user_answer.lower() == correct_answer.lower():
            self.score[self.current_player] += amount
        else:
            self.score[self.current_player] -= amount

        self.score_labels[self.current_player - 1].config(text="Player {} Score: {}".format(self.current_player, self.score[self.current_player]))

        # Switch to the next player
        self.current_player = 2 if self.current_player == 1 else 1

    def get_ai_answer(self):
        # Replace this with your AI logic for answering questions
        # For simplicity, the AI always gives the correct answer
        return self.correct_answers[self.current_category][self.current_amount]

if __name__ == "__main__":
    root = tk.Tk()
    game = JeopardyGame(root)
    root.mainloop()



